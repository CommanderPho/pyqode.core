# -*- coding: utf-8 -*-

# DO NOT EDIT THIS FILE!
# This file has been autogenerated by dephell <3
# https://github.com/dephell/dephell

try:
    from setuptools import setup
except ImportError:
    from distutils.core import setup

import os.path

readme = ''
here = os.path.abspath(os.path.dirname(__file__))
readme_path = os.path.join(here, 'README.rst')
if os.path.exists(readme_path):
    with open(readme_path, 'rb') as stream:
        readme = stream.read().decode('utf8')

setup(
    long_description=readme,
    name='pyqode-core',
    version='3.0.1',
    description='PyQt/PySide Source Code Editor Widget',
    python_requires='>=3.9',
    project_urls={"homepage": "https://github.com/CommanderPho/pyqode.core"},
    author='Robert Haase, Colin Duquesnoy',
    author_email='robert.haase@tu-dresden.de',
    license='MIT',
    keywords='CodeEdit PyQt source code editor widget qt',
    classifiers=[
        'Development Status :: 5 - Production/Stable',
        'Environment :: X11 Applications :: Qt',
        'Environment :: Win32 (MS Windows)', 'Intended Audience :: Developers',
        'License :: OSI Approved :: MIT License',
        'Operating System :: Microsoft :: Windows',
        'Operating System :: POSIX :: Linux',
        'Programming Language :: Python :: 2.7',
        'Programming Language :: Python :: 3.2',
        'Programming Language :: Python :: 3.3',
        'Programming Language :: Python :: 3.4',
        'Topic :: Software Development :: Libraries :: Application Frameworks',
        'Topic :: Software Development :: Widget Sets',
        'Topic :: Text Editors :: Integrated Development Environments (IDE)'
    ],
    packages=[
        'examples.notepad.notepad', 'examples.notepad.notepad.forms', 'pyqode',
        'pyqode.core', 'pyqode.core._designer_plugins', 'pyqode.core._forms',
        'pyqode.core.api', 'pyqode.core.backend', 'pyqode.core.dialogs',
        'pyqode.core.managers', 'pyqode.core.modes', 'pyqode.core.panels',
        'pyqode.core.styles', 'pyqode.core.tools', 'pyqode.core.widgets',
        'test', 'test.test_api', 'test.test_backend', 'test.test_managers',
        'test.test_modes', 'test.test_panels', 'test.test_widgets'
    ],
    package_dir={"": "."},
    package_data={
        "test": ["files/*.txt"],
        "test.test_api": [
            "folding_cases/*.ctx", "folding_cases/*.results",
            "folding_cases/*.static_results"
        ],
        "test.test_widgets": ["*.txt"]
    },
    install_requires=['future', 'pygments'],
)
